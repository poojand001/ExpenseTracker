{"version":3,"sources":["../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.*/.json$","components/dashboard/addexpense.js","components/dashboard/expensehistory.js","components/dashboard/DashBoard.js","components/auth/Login.js","components/auth/Register.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AddExpense","props","state","message","open","amount","description","SubmitExpense","bind","axios","defaults","headers","common","this","token","post","category","value","then","response","setState","catch","Fragment","Modal","onClose","onOpen","trigger","Button","basic","color","Header","Content","Description","Form","Field","inline","Input","placeholder","onChange","event","newValue","TextArea","style","minHeight","Actions","onClick","duration","success","Message","positive","negative","Component","ExpenseHistory","startdate","enddate","expense","TrackExpense","getDate","date","dt","Date","mnth","getMonth","slice","day","getFullYear","join","url","overall","start_date","end_date","console","log","triggeringevent","fluid","size","Grid","divided","Row","columns","Column","as","length","Table","celled","HeaderCell","Body","index","Cell","date_added","Dashboard","newcategory","categories","logout","addcategory","getcategory","handlelogout","name","get","data","to","Menu","secondary","position","Item","textAlign","Card","Group","extra","className","Login","Email","Password","isLoggedIn","handlelogin","email","password","user","centered","Segment","icon","iconPosition","type","Register","UserName","isRegister","registerUser","user_name","App","exact","path","component","DashBoard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7345be1.chunk.js","sourcesContent":["var map = {\n\t\"./bg-BG.json\": 226,\n\t\"./ca-ES.json\": 227,\n\t\"./cs-CZ.json\": 228,\n\t\"./de-DE.json\": 229,\n\t\"./en-US.json\": 174,\n\t\"./es-ES.json\": 230,\n\t\"./et-EE.json\": 231,\n\t\"./fi-FI.json\": 232,\n\t\"./fr-FR.json\": 233,\n\t\"./he-IL.json\": 234,\n\t\"./it-IT.json\": 235,\n\t\"./ja-JP.json\": 236,\n\t\"./ko-KR.json\": 237,\n\t\"./nb-NO.json\": 238,\n\t\"./nn-NO.json\": 239,\n\t\"./pl-PL.json\": 240,\n\t\"./pt-BR.json\": 241,\n\t\"./ru-RU.json\": 242,\n\t\"./sv-SE.json\": 243,\n\t\"./tr-TR.json\": 244,\n\t\"./zh-CN.json\": 245\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 225;","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  TextArea,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport FlashMessage from \"react-flash-message\";\r\n\r\nclass AddExpense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      open: false,\r\n      amount: 0,\r\n      description: \"\",\r\n    };\r\n    this.SubmitExpense = this.SubmitExpense.bind(this);\r\n  }\r\n\r\n  SubmitExpense(e) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `${this.props.token}`;\r\n    axios\r\n      .post(\r\n        \"https://expense-manager-shipmnts.herokuapp.com/api/v1/user/add_expense\",\r\n        {\r\n          category: this.props.category,\r\n          amount: this.state.amount.value,\r\n          description: this.state.description.value,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          message:\r\n            \"Amount for expense \" + `${this.props.category}` + \" is added\",\r\n        });\r\n      })\r\n      .catch((response) => {\r\n        this.setState({ message: response.message });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\" \"}\r\n        <Modal\r\n          onClose={() => this.setState({ open: false })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          open={this.state.open}\r\n          trigger={\r\n            <Button basic color=\"blue\">\r\n              {\" \"}\r\n              Add{\" \"}\r\n            </Button>\r\n          }\r\n        >\r\n          {\" \"}\r\n          <Modal.Header color=\"blue\">\r\n            {\" \"}\r\n            Add Expense for {this.props.category}{\" \"}\r\n          </Modal.Header>{\" \"}\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Form>\r\n                <Form.Field inline>\r\n                  <label> Amount </label>{\" \"}\r\n                  <Input\r\n                    placeholder=\"Amount\"\r\n                    onChange={(event, newValue) =>\r\n                      this.setState({ amount: newValue })\r\n                    }\r\n                  />{\" \"}\r\n                </Form.Field>{\" \"}\r\n                <TextArea\r\n                  placeholder=\"Description\"\r\n                  style={{ minHeight: 100 }}\r\n                  onChange={(event, newValue) =>\r\n                    this.setState({ description: newValue })\r\n                  }\r\n                />{\" \"}\r\n              </Form>{\" \"}\r\n            </Modal.Description>{\" \"}\r\n          </Modal.Content>{\" \"}\r\n          <Modal.Actions>\r\n            <Button color=\"blue\" onClick={this.SubmitExpense}>\r\n              Submit{\" \"}\r\n            </Button>{\" \"}\r\n            {this.state.message !== \"\" ? (\r\n              <FlashMessage duration={5000}>\r\n                {\" \"}\r\n                {this.state.success ? (\r\n                  <Message positive>\r\n                    {\" \"}\r\n                    <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n                  </Message>\r\n                ) : (\r\n                  <Message negative>\r\n                    {\" \"}\r\n                    <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n                  </Message>\r\n                )}{\" \"}\r\n              </FlashMessage>\r\n            ) : (\r\n              \"\"\r\n            )}{\" \"}\r\n          </Modal.Actions>{\" \"}\r\n        </Modal>{\" \"}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default AddExpense;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, Message, Header, Grid, Table } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\nclass ExpenseHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      open: false,\r\n      startdate: \"\",\r\n      enddate: \"\",\r\n      expense: [],\r\n      success: false,\r\n    };\r\n    this.TrackExpense = this.TrackExpense.bind(this);\r\n    this.getDate = this.getDate.bind(this);\r\n  }\r\n  getDate(date) {\r\n    var dt = new Date(date),\r\n      mnth = (\"0\" + (dt.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + dt.getDate()).slice(-2);\r\n    return [dt.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  TrackExpense(e) {\r\n    var startdate = this.getDate(this.state.startdate.value);\r\n    var enddate = this.getDate(this.state.enddate.value);\r\n    axios.defaults.headers.common[\"Authorization\"] = `${this.props.token}`;\r\n    var url;\r\n    if (this.props.overall) {\r\n      url =\r\n        \"https://expense-manager-shipmnts.herokuapp.com/api/v1/user/expense_details\";\r\n    } else {\r\n      url =\r\n        \"https://expense-manager-shipmnts.herokuapp.com/api/v1/user/expense_details/\" +\r\n        `${this.props.category}`;\r\n    }\r\n\r\n    axios\r\n      .post(url, {\r\n        start_date: startdate,\r\n        end_date: enddate,\r\n      })\r\n      .then((response) => {\r\n        console.log(response[\"data\"]);\r\n        this.setState({\r\n          message: \"Track of expense\",\r\n          expense: response[\"data\"],\r\n          success: true,\r\n        });\r\n      })\r\n      .catch((response) => {\r\n        this.setState({ message: response.message, success: false });\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.state.expense);\r\n    let triggeringevent;\r\n    if (this.props.overall) {\r\n      triggeringevent = (\r\n        <Button color=\"green\" fluid size=\"medium\">\r\n          Track Expense{\" \"}\r\n        </Button>\r\n      );\r\n    } else {\r\n      triggeringevent = (\r\n        <Button basic color=\"green\">\r\n          {\" \"}\r\n          Track{\" \"}\r\n        </Button>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Modal\r\n          onClose={() => this.setState({ open: false, expense: [] })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          open={this.state.open}\r\n          trigger={triggeringevent}\r\n        >\r\n          {\" \"}\r\n          <Modal.Header color=\"blue\"> Track Expense </Modal.Header>{\" \"}\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Grid divided=\"vertically\">\r\n                <Grid.Row columns={2}>\r\n                  {\" \"}\r\n                  <Grid.Column>\r\n                    {\" \"}\r\n                    <Header as=\"h4\"> Start Date </Header>\r\n                    <SemanticDatepicker\r\n                      onChange={(event, newValue) =>\r\n                        this.setState({ startdate: newValue })\r\n                      }\r\n                    />\r\n                  </Grid.Column>{\" \"}\r\n                  <Grid.Column>\r\n                    {\" \"}\r\n                    <Header as=\"h4\"> End Date </Header>\r\n                    <SemanticDatepicker\r\n                      onChange={(event, newValue) =>\r\n                        this.setState({ enddate: newValue })\r\n                      }\r\n                    />\r\n                  </Grid.Column>{\" \"}\r\n                </Grid.Row>\r\n              </Grid>{\" \"}\r\n              {this.state.expense.length ? (\r\n                <Table celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell> Description </Table.HeaderCell>{\" \"}\r\n                      <Table.HeaderCell> Amount </Table.HeaderCell>{\" \"}\r\n                      <Table.HeaderCell> Date Added </Table.HeaderCell>{\" \"}\r\n                      {this.props.overall ? (\r\n                        <Table.HeaderCell> Category </Table.HeaderCell>\r\n                      ) : (\r\n                        \"\"\r\n                      )}{\" \"}\r\n                    </Table.Row>{\" \"}\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {\" \"}\r\n                    {this.state.expense.map((expense, index) => (\r\n                      <Table.Row key={index}>\r\n                        <Table.Cell> {expense.description} </Table.Cell>{\" \"}\r\n                        <Table.Cell> {expense.amount} </Table.Cell>{\" \"}\r\n                        <Table.Cell> {expense.date_added} </Table.Cell>\r\n                        {this.props.overall ? (\r\n                          <Table.Cell> {expense.category} </Table.Cell>\r\n                        ) : (\r\n                          \"\"\r\n                        )}{\" \"}\r\n                      </Table.Row>\r\n                    ))}{\" \"}\r\n                  </Table.Body>{\" \"}\r\n                </Table>\r\n              ) : (\r\n                \"\"\r\n              )}{\" \"}\r\n            </Modal.Description>{\" \"}\r\n          </Modal.Content>{\" \"}\r\n          <Modal.Actions>\r\n            <Button color=\"blue\" onClick={this.TrackExpense}>\r\n              Submit{\" \"}\r\n            </Button>{\" \"}\r\n            {this.state.message !== \"\" ? (\r\n              <FlashMessage duration={5000}>\r\n                {\" \"}\r\n                {this.state.success ? (\r\n                  <Message positive>\r\n                    {\" \"}\r\n                    <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n                  </Message>\r\n                ) : (\r\n                  <Message negative>\r\n                    {\" \"}\r\n                    <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n                  </Message>\r\n                )}{\" \"}\r\n              </FlashMessage>\r\n            ) : (\r\n              \"\"\r\n            )}{\" \"}\r\n          </Modal.Actions>{\" \"}\r\n        </Modal>{\" \"}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default ExpenseHistory;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./dashboard.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Message,\r\n  Grid,\r\n  Header,\r\n  Input,\r\n  Card,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport AddExpense from \"./addexpense\";\r\nimport ExpenseHistory from \"./expensehistory\";\r\nimport FlashMessage from \"react-flash-message\";\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newcategory: \"\",\r\n      categories: [],\r\n      message: \"\",\r\n      success: false,\r\n      logout: false,\r\n    };\r\n    this.addcategory = this.addcategory.bind(this);\r\n    this.getcategory = this.getcategory.bind(this);\r\n    this.handlelogout = this.handlelogout.bind(this);\r\n    axios.defaults.headers.common[\"Authorization\"] = `${this.props.token}`;\r\n  }\r\n  handlelogout(e) {\r\n    this.setState({ logout: true });\r\n  }\r\n  addcategory(e) {\r\n    axios\r\n      .post(\r\n        \"https://expense-manager-shipmnts.herokuapp.com/api/v1/user/add_category\",\r\n        {\r\n          name: this.state.newcategory.value,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({ newcategory: \"\", message: \"\", success: true });\r\n        this.getcategory();\r\n      })\r\n      .catch((response) => {\r\n        this.setState({ message: response.message, success: false });\r\n      });\r\n  }\r\n  getcategory() {\r\n    axios\r\n      .get(\r\n        \"https://expense-manager-shipmnts.herokuapp.com/api/v1/user/categories\",\r\n        {}\r\n      )\r\n      .then((data) => {\r\n        this.setState({ categories: data[\"data\"][\"categories\"] });\r\n      });\r\n  }\r\n  componentWillMount() {\r\n    this.getcategory();\r\n  }\r\n  render() {\r\n    let show;\r\n    if (this.state.logout) {\r\n      show = <Redirect to=\"/login\" />;\r\n    } else {\r\n      show = (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Menu secondary>\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item name=\"logout\" onClick={this.handlelogout} />{\" \"}\r\n            </Menu.Menu>{\" \"}\r\n          </Menu>{\" \"}\r\n          <Header as=\"h1\" textAlign=\"center\" color=\"blue\">\r\n            Expense Tracker{\" \"}\r\n          </Header>{\" \"}\r\n          <Header as=\"h2\" textAlign=\"center\" color=\"red\">\r\n            Categories{\" \"}\r\n          </Header>{\" \"}\r\n          <div id=\"container\">\r\n            {\" \"}\r\n            <Card.Group>\r\n              {\" \"}\r\n              {this.state.categories.map((category, index) => (\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header> {category} </Card.Header>{\" \"}\r\n                    <Card.Description>\r\n                      Please click the below buttons to add or track expense for{\" \"}\r\n                      {category}{\" \"}\r\n                    </Card.Description>{\" \"}\r\n                  </Card.Content>{\" \"}\r\n                  <Card.Content extra>\r\n                    <div className=\"ui two buttons\">\r\n                      <AddExpense\r\n                        category={category}\r\n                        token={this.props.token}\r\n                      />{\" \"}\r\n                      <ExpenseHistory\r\n                        category={category}\r\n                        token={this.props.token}\r\n                        overall={false}\r\n                      />{\" \"}\r\n                    </div>{\" \"}\r\n                  </Card.Content>{\" \"}\r\n                </Card>\r\n              ))}{\" \"}\r\n            </Card.Group>{\" \"}\r\n            <Grid divided=\"vertically\">\r\n              <Grid.Row columns={6}>\r\n                {\" \"}\r\n                <Grid.Column>\r\n                  {\" \"}\r\n                  <Input\r\n                    placeholder=\"Category Name\"\r\n                    onChange={(event, newValue) =>\r\n                      this.setState({ newcategory: newValue })\r\n                    }\r\n                  />{\" \"}\r\n                </Grid.Column>{\" \"}\r\n                <Grid.Column>\r\n                  {\" \"}\r\n                  <Button\r\n                    color=\"blue\"\r\n                    fluid\r\n                    size=\"medium\"\r\n                    onClick={this.addcategory}\r\n                  >\r\n                    Add Category{\" \"}\r\n                  </Button>{\" \"}\r\n                </Grid.Column>{\" \"}\r\n                <Grid.Column>\r\n                  {\" \"}\r\n                  <ExpenseHistory\r\n                    category={\"none\"}\r\n                    token={this.props.token}\r\n                    overall={true}\r\n                  />{\" \"}\r\n                </Grid.Column>{\" \"}\r\n              </Grid.Row>{\" \"}\r\n            </Grid>{\" \"}\r\n            {this.state.message !== \"\" ? (\r\n              <FlashMessage duration={5000}>\r\n                {\" \"}\r\n                {this.state.success ? (\r\n                  <Message positive>\r\n                    {\" \"}\r\n                    <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n                  </Message>\r\n                ) : (\r\n                  <Message negative>\r\n                    {\" \"}\r\n                    <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n                  </Message>\r\n                )}{\" \"}\r\n              </FlashMessage>\r\n            ) : (\r\n              \"\"\r\n            )}{\" \"}\r\n          </div>{\" \"}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return show;\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Message,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport Dashboard from \"../dashboard/DashBoard\";\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Email: \"\",\r\n      Password: \"\",\r\n      isLoggedIn: false,\r\n      token: \"\",\r\n      message: \"\",\r\n    };\r\n    this.handlelogin = this.handlelogin.bind(this);\r\n  }\r\n  handlelogin() {\r\n    axios\r\n      .post(\"https://expense-manager-shipmnts.herokuapp.com/api/v1/login\", {\r\n        email: this.state.Email.value,\r\n        password: this.state.Password.value,\r\n      })\r\n      .then((data) =>\r\n        this.setState({\r\n          token: data[\"data\"][\"token\"],\r\n          isLoggedIn: true,\r\n          message: \"Successfully Logged In\",\r\n        })\r\n      )\r\n      .catch((response) => {\r\n        this.setState({ message: response.message });\r\n      });\r\n  }\r\n  render() {\r\n    let isLogged = this.state.isLoggedIn;\r\n    let show;\r\n    if (isLogged) {\r\n      show = (\r\n        <Dashboard token={this.state.token} user={this.state.Email.value} />\r\n      );\r\n    } else {\r\n      show = (\r\n        <Grid centered columns={2}>\r\n          {\" \"}\r\n          <Grid.Column>\r\n            <Header as=\"h2\" textAlign=\"center\">\r\n              Login{\" \"}\r\n            </Header>{\" \"}\r\n            <Segment>\r\n              <Form size=\"large\">\r\n                <Form.Input\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Email address\"\r\n                  onChange={(event, newValue) =>\r\n                    this.setState({ Email: newValue })\r\n                  }\r\n                />{\" \"}\r\n                <Form.Input\r\n                  fluid\r\n                  icon=\"lock\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  onChange={(event, newValue) =>\r\n                    this.setState({ Password: newValue })\r\n                  }\r\n                />{\" \"}\r\n                <Button\r\n                  color=\"blue\"\r\n                  fluid\r\n                  size=\"large\"\r\n                  onClick={this.handlelogin}\r\n                >\r\n                  Login{\" \"}\r\n                </Button>{\" \"}\r\n              </Form>{\" \"}\r\n            </Segment>{\" \"}\r\n            <Message>\r\n              <Link to=\"/register\"> Register </Link>{\" \"}\r\n            </Message>{\" \"}\r\n          </Grid.Column>{\" \"}\r\n        </Grid>\r\n      );\r\n    }\r\n    return show;\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Segment,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport FlashMessage from \"react-flash-message\";\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Email: \"\",\r\n      Password: \"\",\r\n      UserName: \"\",\r\n      message: \"\",\r\n      isRegister: false,\r\n    };\r\n    this.registerUser = this.registerUser.bind(this);\r\n  }\r\n\r\n  registerUser() {\r\n    axios\r\n      .post(\"https://expense-manager-shipmnts.herokuapp.com/api/v1/register\", {\r\n        user_name: this.state.UserName.value,\r\n        email: this.state.Email.value,\r\n        password: this.state.Password.value,\r\n      })\r\n      .then((response) => {\r\n        this.setState({ message: \"User has been added\", isRegister: true });\r\n      })\r\n      .catch((response) => {\r\n        this.setState({ message: response.message });\r\n      });\r\n  }\r\n  render() {\r\n    let show;\r\n    if (this.state.isRegister) {\r\n      show = <Redirect to=\"/login\" />;\r\n    } else {\r\n      show = (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Grid centered columns={2}>\r\n            <Grid.Column>\r\n              <Header as=\"h2\" textAlign=\"center\">\r\n                Register{\" \"}\r\n              </Header>{\" \"}\r\n              <Segment>\r\n                <Form size=\"large\">\r\n                  <Form.Input\r\n                    fluid\r\n                    icon=\"user\"\r\n                    iconPosition=\"left\"\r\n                    placeholder=\"User Name\"\r\n                    onChange={(event, newValue) =>\r\n                      this.setState({ UserName: newValue })\r\n                    }\r\n                  />{\" \"}\r\n                  <Form.Input\r\n                    fluid\r\n                    icon=\"user\"\r\n                    iconPosition=\"left\"\r\n                    placeholder=\"Email address\"\r\n                    onChange={(event, newValue) =>\r\n                      this.setState({ Email: newValue })\r\n                    }\r\n                  />{\" \"}\r\n                  <Form.Input\r\n                    fluid\r\n                    icon=\"lock\"\r\n                    iconPosition=\"left\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={(event, newValue) =>\r\n                      this.setState({ Password: newValue })\r\n                    }\r\n                  />{\" \"}\r\n                  <Button\r\n                    color=\"blue\"\r\n                    fluid\r\n                    size=\"large\"\r\n                    onClick={this.registerUser}\r\n                  >\r\n                    Register{\" \"}\r\n                  </Button>{\" \"}\r\n                </Form>{\" \"}\r\n              </Segment>{\" \"}\r\n            </Grid.Column>{\" \"}\r\n          </Grid>{\" \"}\r\n          {this.state.message !== \"\" ? (\r\n            <FlashMessage duration={4000}>\r\n              {\" \"}\r\n              <Message negative>\r\n                {\" \"}\r\n                <Message.Header> {this.state.message} </Message.Header>{\" \"}\r\n              </Message>{\" \"}\r\n            </FlashMessage>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return show;\r\n  }\r\n}\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport DashBoard from \"./components/dashboard/DashBoard\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Login} />{\" \"}\n        <Route exact path=\"/login\" component={Login} />{\" \"}\n        <Route exact path=\"/register\" component={Register} />{\" \"}\n        <Route exact path=\"/dashboard\" component={DashBoard} />{\" \"}\n      </Router>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <\n    App / > ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}